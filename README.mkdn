Statgrab for Ruby
=================

Ruby bindings to the libstatgrab portable system statistics library.

Building and installing
-----------------------

First, make sure libstatgrab is installed on your system.

Follow these procedures to build and install manually:

    ruby extconf.rb
    make
    su
    make install

Optionally, you may build a Rubygem:

    gem build statgrab.gemspec
    su
    gem install statgrab-0.1.gem

API
---

The `new` method takes a `false` argument to skip privileges
dropping. All instance methods return symbol hashes or arrays
of symbol hashes corresponding to their libstatgrab struct
counterparts (sometimes with added Ruby goodies). `enum`
datatypes are represented as lowercased symbols with namespacing
cut off, e.g. `SG_IFACE_DUPLEX_FULL` is `:full`.

### Exceptions

All exceptions are defined under the `Statgrab` namespace and
inherit from `Statgrab::Exception`, so to capture all errors
related to statgrab you can rescue that parent exception.

Here is a list of all exceptions in the `Statgrab` namespace:

- `AsprintfError`
- `DevicesError`
- `DevstatGetdevsError`
- `DevstatSelectdevsError`
- `DiskinfoError`
- `EnoentError`
- `GetifaddrsError`
- `GetmntinfoError`
- `GetpagesizeError`
- `HostError`
- `KstatDataLookupError`
- `KstatLookupError`
- `KstatOpenError`
- `KstatReadError`
- `KvmGetswapinfoError`
- `KvmOpenfilesError`
- `MallocError`
- `MemstatusError`
- `OpenError`
- `OpendirError`
- `ParseError`
- `PdhaddError`
- `PdhcollectError`
- `PdhopenError`
- `PdhreadError`
- `PermissionError`
- `PstatError`
- `SetegidError`
- `SeteuidError`
- `SetmntentError`
- `SocketError`
- `SwapctlError`
- `SysconfError`
- `SysctlError`
- `SysctlbynameError`
- `SysctlnametomibError`
- `UnameError`
- `UnsupportedError`
- `XswVerMismatchError`

### Instance methods

Methods are named as in libstatgrab but without the `sg_get_`
prefix, and some also have aliases, usually either shorter
or more rubyistic.

- `cpu_stats`, `cpu`
- `cpu_stats_diff`, `cpu_difference`
- `cpu_percents`
- `disk_io_stats`, `disk_io`
- `disk_io_stats_diff`, `disk_io_difference`
- `fs_stats`, `fs`, `file_system`
- `host_info`, `host`, `system`
- `load_stats`, `load`, `loadavg`, `load_average`, `system_load`
- `mem_stats`, `memory`
- `swap_stats`, `swap`
- `network_io_stats`, `network_io`, `net_io`, `network`, `net`
- `network_io_stats_diff`, `network_io_difference`, `network_difference`,
`net_difference`
- `network_iface_stats`, `network_iface`, `net_iface`, `iface`

Somewhat relevant information is available for every method
supplied with libstatgrab as manual pages:

    man sg_get_<method>

Where `<method>` is not an alias. Also remember all
structs are represented as symbol hashes, and any bytes
are converted to kilobytes.

Sample program
--------------

    require 'statgrab'
    begin
      sg = Statgrab.new
      puts "CPU Usage: %.1f%%" % sg.cpu_percents[:user]
    rescue Statgrab::Exception => e
      puts "Error! %s" % e.message
    end

Licensing
---------

Copyright 2008 Dag Odenhall <dag.odenhall@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License").
You may obtain a copy of the License at

   <http://www.apache.org/licenses/LICENSE-2.0>

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
